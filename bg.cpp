/*==============================================================================

	í∏ì_ä«óù [bg.cpp]
	Author :20106_ìcíÜò@
	Date   :23_07_06
--------------------------------------------------------------------------------

==============================================================================*/
#include "bg.h"
#include "sprite.h"
#include "texture.h"
#include "collision.h"
#include "player.h"
#include "enemy.h"
#include "hone.h"
#include "boss.h"
//#include "camera.h"

//*****************************************************************************
// É}ÉNÉçíËã`
//*****************************************************************************
#define MAP_X	(MAP_SCREAN * SCREAN_NUM)
#define MAP_Y	(12)

//*****************************************************************************
// ÉvÉçÉgÉ^ÉCÉvêÈåæ
//*****************************************************************************
void SetBossroom(void);


//*****************************************************************************
// ÉOÉçÅ[ÉoÉãïœêî
//*****************************************************************************

static int g_TexNo = 0;
static bool g_FightBoss;

struct MAPINFO
{
	D3DXVECTOR2 uv;
	int			isMove;	//1ï‡ÇØÇÈÅA0ï‡ÇØÇ»Ç¢
};

static D3DXVECTOR2 g_MapInfoBase[] =
{ 
	{},
	{  0.0f, 0.0f},	//ëêå¥
	{0.125f, 0.0f},	//ëêå¥2
	{ 0.25, 0.0f},	//ëêå¥3
	{0.375, 0.0f},	//ëêå¥4
	{  0.5, 0.0f},	//ìy
	{0.625, 0.0f},	//ä‚
	{ 0.75, 0.0f},	//çª
	{0.875, 0.0f},	//çªóò
};
static MAPINFO g_MapInfoObj[] =
{
	{{},1},
	{{  0.0f, 0.0f}, 0},	//ëêå¥		1
	{{0.125f, 0.0f}, 0},	//ëêå¥		2
	{{ 0.25f, 0.0f}, 0},	//ëêå¥		3
	{{0.375f, 0.0f}, 0},	//ëêå¥		4
	{{  0.5f, 0.0f}, 0},	//ìy		5
	{{  0.5f, 0.0f}, 1},	//ìy		6	boss
	{{0.625f, 0.0f}, 0},	//ä‚		6
	{{ 0.75f, 0.0f}, 0},	//çª		7
	{{0.875f, 0.0f}, 0},	//çªóò		8
	{{  0.0f, 0.75},1},	//ëêÇP			9
	{{0.125f, 0.75},1},	//ëêÇQ			10
	{{ 0.25, 0.75},1},	//åÕëêÇP		11
	{{0.375, 0.75},1},	//åÕëêÇQ		12
	{{  0.5, 0.75},1},	//â‘ÇP			13
	{{0.625, 0.75},1},	//â‘ÇQ			14
	{{ 0.75, 0.75},1},	//â‘ÇR			15
	{{0.875, 0.75},1},	//â‘ÇS			16
	{{  0.0f, 0.875},1},	//ÉLÉmÉRÇP	17
	{{0.125f, 0.875},1},	//ÉLÉmÉRÇQ	18
	{{ 0.25, 0.875},0},	//êÖëêÇP		19
	{{0.375, 0.875},0},	//êÖëêÇQ		20
	{{  0.5, 0.875},0},	//êÖÇP			21
	{{0.625, 0.875},0},	//êÖÇQ			22
	{{ 0.75, 0.875},0},	//êÖÇR			23
	{{0.875, 0.875},0},	//åä			24
	{{  0.0f, 0.125f},0},	//ñÿÇPâEè„	25
	{{0.125f, 0.125f},0},	//ñÿÇPç∂è„	26
	{{  0.0f,  0.25f},0},	//ñÿÇPâEâ∫	27
	{{0.125f,  0.25f},0},	//ñÿÇPç∂â∫	28
	{{  0.25f, 0.125f},0},	//ñÿÇQâEè„	29
	{{0.375f, 0.125f},0},	//ñÿÇQç∂è„	30
	{{  0.25f,  0.25f},0},	//ñÿÇQâEâ∫	31
	{{0.375f,  0.25f},0},	//ñÿÇQç∂â∫	32
	{{  0.5f, 0.125f},0},	//ñÿÇRâEè„	33
	{{0.625f, 0.125f},0},	//ñÿÇRç∂è„	34
	{{  0.5f,  0.25f},0},	//ñÿÇRâEâ∫	35
	{{0.625f,  0.25f},0},	//ñÿÇRç∂â∫	36
	{{ 0.75f, 0.125f},0},	//åÕÇÍñÿç∂è„37
	{{0.875f, 0.125f},0},	//åÕÇÍñÿâEè„38
	{{ 0.75f,  0.25f},0},	//åÕÇÍñÿç∂â∫39
	{{0.875f,  0.25f},0},	//åÕÇÍñÿâEâ∫40
};
static D3DXVECTOR2 g_MapInfoEnemy[] =
{
	{},
	{ 0.0f, 0.0f},	//ê√é~
	{ -1.0f, 0.0f},	//ç∂å¸Ç´ ÉSÅ[ÉXÉg
	{ -1.0f, 0.0f},	//ç∂å¸Ç´ çú
	{ -1.0f, 0.0f},	//ç∂å¸Ç´ É{ÉX
	{ 1.0f, 0.0f},	//âEå¸Ç´
};

static int g_MapBase[MAP_Y][40] =
{
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
};

static int g_MapObj[MAP_Y][MAP_X] =
{
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 7, 7, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 7, 7, 7, 1, 1, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 7, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
};

static int g_MapEnemy[MAP_Y][MAP_X] =
{
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
};

//=============================================================================
// èâä˙âªèàóù
//=============================================================================
void InitBg(void)
{
	//ÉeÉNÉXÉ`ÉÉÇÃì«Ç›çûÇ›
	g_TexNo = LoadTexture((char*)"data/TEXTURE/mapchip1.png");
	g_FightBoss = false;
}

//=============================================================================
// èIóπèàóù
//=============================================================================
void UninitBg(void)
{

}

//=============================================================================
// çXêVèàóù
//=============================================================================
void UpdateBg(void)
{
}


//=============================================================================
// ï`âÊèàóù
//=============================================================================
//ínñ 	ÉxÅ[ÉXÉåÉCÉÑÅ[
void DrawBg(void)
{
	//ê¸ÇÇ»Ç≠Ç∑
	SetSamplerState(FILTER_MODE_POINT, ADDRESS_MODE_CLAMP);

	//for (int y = 0; y < MAP_Y; y++) {
	//	for (int x = 0; x < MAP_X; x++) {
	//		//0ÇÕï`âÊÇµÇ»Ç¢
	//		if (g_MapBase[y][x] == 0) {
	//			continue;
	//		}
	//		DrawSpriteLeftTopBase(g_TexNo,
	//			0.0f + (SIZE * x), 0.0f + (SIZE * y),
	//			SIZE, SIZE,
	//			g_MapInfoBase[g_MapBase[y][x]].x, g_MapInfoBase[g_MapBase[y][x]].y,//UVílÇÃénì_
	//			0.125f, 0.125f);
	//	}
	//}
	//ÉLÉÉÉâÇÃè„Å@ÉIÅ[ÉoÅ[ÉåÉCÉÑÅ[
}

//â‘Ç∆Ç©ñÿ	ÉIÉuÉWÉFÉNÉgÉåÉCÉÑÅ[
void DrawBgObj(void)
{
	//ê¸ÇÇ»Ç≠Ç∑
	SetSamplerState(FILTER_MODE_POINT, ADDRESS_MODE_CLAMP);

	for (int y = 0; y < MAP_Y; y++) {
		for (int x = 0; x < MAP_X; x++) {
			//0ÇÕï`âÊÇµÇ»Ç¢
			if (g_MapObj[y][x] == 0 ||
				g_MapObj[y][x] == 6) {
				continue;
			}
			g_FightBoss = GetFightBoss();
			SetBossroom();

			DrawSpriteLeftTopBase(g_TexNo,
				0.0f + (SIZE * x), 0.0f + (SIZE * y),
				SIZE, SIZE,
				g_MapInfoObj[g_MapObj[y][x]].uv.x, g_MapInfoObj[g_MapObj[y][x]].uv.y,//UVílÇÃénì_
				0.125f, 0.125f);
		}
	}
}
//É{ÉXïîâÆÇÃì¸ÇËå˚ÇÇ”Ç≥ÇÆ
void SetBossroom(void) {
	for (int y = 0; y < MAP_Y; y++) {
		for (int x = 0; x < MAP_X; x++) {
			if (g_MapObj[y][x] == 6) {
				if (g_FightBoss) {
					//ï`âÊÇµÇƒ
					DrawSpriteLeftTopBase(g_TexNo,
						0.0f + (SIZE * x), 0.0f + (SIZE * y),
						SIZE, SIZE,
						g_MapInfoObj[g_MapObj[y][x]].uv.x, g_MapInfoObj[g_MapObj[y][x]].uv.y,//UVílÇÃénì_
						0.125f, 0.125f);
					//ìñÇΩÇÈèÛë‘Ç…Ç∑ÇÈ
					g_MapInfoObj[g_MapObj[y][x]].isMove = 0;
				}
				else {
					g_MapInfoObj[g_MapObj[y][x]].isMove = 1;
				}
			}
		}
	}
}

//ìGÇÉ}ÉbÉvÇ©ÇÁÉZÉbÉgÇ∑ÇÈ
void BgSetEnemy(void)
{
	for (int y = 0; y < MAP_Y; y++) {
		for (int x = 0; x < MAP_X; x++) {
			if (g_MapEnemy[y][x] == 2) {
				SetEnemy(SIZE * x, SIZE * y,
					g_MapInfoEnemy[g_MapEnemy[y][x]].x, g_MapInfoEnemy[g_MapEnemy[y][x]].y);
				continue;
			}
		}
	}
}
//çúÇÉ}ÉbÉvÇ©ÇÁÉZÉbÉgÇ∑ÇÈ
void BgSetHone(void)
{
	for (int y = 0; y < MAP_Y; y++) {
		for (int x = 0; x < MAP_X; x++) {
			if (g_MapEnemy[y][x] == 3) {
				SetHone(SIZE * x, SIZE * y,
					g_MapInfoEnemy[g_MapEnemy[y][x]].x, g_MapInfoEnemy[g_MapEnemy[y][x]].y);
			}
		}
	}
}
//É{ÉXÇÉ}ÉbÉvÇ©ÇÁÉZÉbÉgÇ∑ÇÈ
void BgSetBoss(void)
{
	for (int y = 0; y < MAP_Y; y++) {
		for (int x = 0; x < MAP_X; x++) {
			if (g_MapEnemy[y][x] == 4) {
				SetBoss(SIZE * x, SIZE * y,
					g_MapInfoEnemy[g_MapEnemy[y][x]].x, g_MapInfoEnemy[g_MapEnemy[y][x]].y);
			}
		}
	}
}

bool CheckHitBG(float x, float y ,float width, float height)
{
	//ÉvÉåÅ[ÉÑÅ[ãÈå`ÇÃâﬂìxÇÃç¿ïW
	D3DXVECTOR2 left_top = D3DXVECTOR2(x - (width * 0.5f),y - (height * 0.5f));
	D3DXVECTOR2 right_top = D3DXVECTOR2(x + (width * 0.5f),y - (height * 0.5f));
	D3DXVECTOR2 left_bottom = D3DXVECTOR2(x - (width * 0.5f),y + (height * 0.5f));
	D3DXVECTOR2 right_bottom = D3DXVECTOR2(x + (width * 0.5f),y + (height * 0.5f));

	//îzóÒÇÃà íu
	int mapx;
	int mapy;

	//ç∂è„ÇÃÉ`ÉFÉbÉN
	mapx = left_top.x / SIZE;	//Xç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃâ°ïùÇ≈äÑÇÈ
	mapy = left_top.y / SIZE;	//Yç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃçÇÇ≥Ç≈äÑÇÈ
	//ìñÇΩÇ¡ÇƒÇÈ
	if (g_MapInfoObj[g_MapObj[mapy][mapx]].isMove == 0) {
		return true;
	}

	//âEè„ÇÃÉ`ÉFÉbÉN
	mapx = right_top.x / SIZE;	//Xç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃâ°ïùÇ≈äÑÇÈ
	mapy = right_top.y / SIZE;	//Yç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃçÇÇ≥Ç≈äÑÇÈ
	//ìñÇΩÇ¡ÇƒÇÈ
	if (g_MapInfoObj[g_MapObj[mapy][mapx]].isMove == 0) {
		return true;
	}

	//ç∂â∫ÇÃÉ`ÉFÉbÉN
	mapx = left_bottom.x / SIZE;	//Xç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃâ°ïùÇ≈äÑÇÈ
	mapy = left_bottom.y / SIZE;	//Yç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃçÇÇ≥Ç≈äÑÇÈ
	//ìñÇΩÇ¡ÇƒÇÈ
	if (g_MapInfoObj[g_MapObj[mapy][mapx]].isMove == 0) {
		return true;
	}

	//âEâ∫ÇÃÉ`ÉFÉbÉN
	mapx = right_bottom.x / SIZE;	//Xç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃâ°ïùÇ≈äÑÇÈ
	mapy = right_bottom.y / SIZE;	//Yç¿ïWÇÉ}ÉbÉvÉ`ÉbÉvÇÃçÇÇ≥Ç≈äÑÇÈ
	//ìñÇΩÇ¡ÇƒÇÈ
	if (g_MapInfoObj[g_MapObj[mapy][mapx]].isMove == 0) {
		return true;
	}

	return false;
}